package ocajp.cap2;

import org.junit.Test;

public class EUnderstandingJavaStatements {
	//executed under certain conditions

	@Test
	public void theIf_thenStatement(){
		//we only want to execute a block of code under certain circumstances
		//Accomplishes this by allowing our application to execute a particular block of code if and only if a boolean expression evaluates to true at runtime.
		
		int morningGreetingCount = 0;
		int hourOfDay = 8;
		
		if(hourOfDay < 11)
			System.out.println("Good Morning");
		
		//usando llaves, multiples statements
		if(hourOfDay < 11) {
			System.out.println("Good Morning");
			morningGreetingCount++;
		}	
	}
	
	@Test	
	public void theIf_then_elseStatement(){
		
		int hourOfDay = 8;
		if (hourOfDay < 11) {
			System.out.println("Good Morning");
		}
		if (hourOfDay >= 11) {
			System.out.println("Good Afternoon");
		}
		
		//mejor usa esto:Now our code is truly branching between one of the two possible options,
		if (hourOfDay < 11) {
			System.out.println("Good Morning");
		} else {
			System.out.println("Good Afternoon");
		}
		
		// tambien
		if (hourOfDay < 11) {
			System.out.println("Good Morning");
		} else if (hourOfDay < 15) {
			System.out.println("Good Afternoon");
		} else {
			System.out.println("Good Evening");
		}
		//if-then-else statements is that order is important
		if (hourOfDay < 15) {
			System.out.println("Good Afternoon");
		} else if (hourOfDay < 11) {
			System.out.println("Good Morning"); // UNREACHABLE CODE
		} else {
			System.out.println("Good Evening");
		}
		
		//OJO
		/*
		int x = 1;
		if(x) { // DOES NOT COMPILE
		...
		}
		*/
		
		/*
		int x = 1;
		if(x = 5) { // DOES NOT COMPILE
			...
		}
		*/
		
		/**************Ternary Operator******************/
		//The conditional operator, ? :
		//booleanExpression ? expression1 : expression2
		//second and third can be any expression that returns a value.
		//The ternary operation is really a condensed form of an ifthen-else statement that returns a value
	}
	
	@Test
	public void theSwitchStatement(){
		
	}
	
	@Test
	public void thewhileStatement(){
		
	}
	
	@Test
	public void theDo_whileStatement(){
		
	}
	
	@Test
	public void theForStatement(){
		
	}

	
}
